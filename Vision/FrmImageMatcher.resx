<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ButtonOpenImageB.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhKAAlAIcAALaQKAEBADouDD8yDoVpHTUqC9ClLiMcB6uIJtqtMM+kLnFaGUc4D518IhMPBNaq
        L2pUF1VEE9msMJN1ILqUKaWDJAUEAVpHFO69NHhfGjgsDOi4M+W2M9uuMDYrDIptHhgTBSwjCUM1D009
        ETsuDYxvHzwwDT4xDYtuHhENA0g5EIBmHIRpHRQQBN6wMdyuMJl5Iq+LJuO0MsadLGJNFeGzMsyiLd2v
        MbyVKQ8MAxIOBAkHAkE0DqaEJbmTKQsJAmhTF+q6NBQPBIlsHltIFAYFAW5XGFxJFN6xMcKaK2BMFUdP
        Zpd4IVdFE1FAEicfCG97oL6XKpZ3IYhsHks7ECEaBygfCHeEq5BzIMqgLNWpL6qHJV9piSYeCEQ2D3BZ
        GFNCEjwvDT0xDbSPKD9GW3phGycsOWtVF35kHF9LFS0kChcSBe28NOCyMaiFJee3MyAZB7uVKdOoLxYS
        BdirMHlgGlFBEggGAVlHE3xjGy80RN+xMbOOJ+K0MrGMJ+y7NAwJAlhGE5x8Ipt7IgcICwICAK6KJjEn
        CxoVBYZqHXZdGlRDEqSCJDktDCsiCamGJV1KFMSbK0I0DhwWBioiCcmfLCggCWVQFsuhLXlgG7WPKOm5
        M6B/IwcGAUAzDr2WKm9YGL+YKg4LA5h5ITQpC6OCJFZEE9SoLzIoCzAmCq2JJnRcGR4YBtKnLsWcK4dr
        HqF/I2ZRFh8jLbeSKCQcCI9yH+S1Mo5xH8ieLEo7ECUdCLiSKe+9NS8lCm1XGJ9+I31jG39lHPLANaeF
        JSkhCUk6EGxWGHtiG1JBEterLy4lCoFmHHVdGgQDAQMDABsVBtGmLpJ0IEU3DzMoC8GZKldgfZR2IfC+
        NRcaImNOFmRPFqyIJmlUF8qhLZFzIOu6NE4+EWdSFx8YBl5KFPG/NVA/EceeLDc9UMCYKua3Mx0XBhkU
        BY1wH2dylM2jLbKNJ5V2IYNoHXJaGcObK3deGoJnHRURBKKBJKKAJE8+EbaRKJ59I86kLfPBNgAAAH+N
        tyH/C05FVFNDQVBFMi4wAwEBAAAh+QQAAAAAACwAAAAAKAAlAAAIsAD9CRxIsKDBgwgTKlzIsKHDhw1l
        keFCEcq/ixgzaoToj4xFjSBDXnxo5qPIkxkdLkHJMiVDMi1j/mOoR2bMhdhs3lRoUudJhed8tuQplGVC
        WUWNIlyZ9CdCLk2dHrwSVWTCqlYRYg15detGhFS9YkwIVezIpWbPHjSTdmbCsGIVwjSrkFBPrAvZxl3I
        dGvDvlUd1sTr0Ey7wA8JLYErlKM/QnqqMZbpuLLly5gzDwwIADs=
</value>
  </data>
  <data name="ButtonOpenImageA.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhKAAlAIcAALaQKAEBADouDD8yDoVpHTUqC9ClLiMcB6uIJtqtMM+kLnFaGUc4D518IhMPBNaq
        L2pUF1VEE9msMJN1ILqUKaWDJAUEAVpHFO69NHhfGjgsDOi4M+W2M9uuMDYrDIptHhgTBSwjCUM1D009
        ETsuDYxvHzwwDT4xDYtuHhENA0g5EIBmHIRpHRQQBN6wMdyuMJl5Iq+LJuO0MsadLGJNFeGzMsyiLd2v
        MbyVKQ8MAxIOBAkHAkE0DqaEJbmTKQsJAmhTF+q6NBQPBIlsHltIFAYFAW5XGFxJFN6xMcKaK2BMFUdP
        Zpd4IVdFE1FAEicfCG97oL6XKpZ3IYhsHks7ECEaBygfCHeEq5BzIMqgLNWpL6qHJV9piSYeCEQ2D3BZ
        GFNCEjwvDT0xDbSPKD9GW3phGycsOWtVF35kHF9LFS0kChcSBe28NOCyMaiFJee3MyAZB7uVKdOoLxYS
        BdirMHlgGlFBEggGAVlHE3xjGy80RN+xMbOOJ+K0MrGMJ+y7NAwJAlhGE5x8Ipt7IgcICwICAK6KJjEn
        CxoVBYZqHXZdGlRDEqSCJDktDCsiCamGJV1KFMSbK0I0DhwWBioiCcmfLCggCWVQFsuhLXlgG7WPKOm5
        M6B/IwcGAUAzDr2WKm9YGL+YKg4LA5h5ITQpC6OCJFZEE9SoLzIoCzAmCq2JJnRcGR4YBtKnLsWcK4dr
        HqF/I2ZRFh8jLbeSKCQcCI9yH+S1Mo5xH8ieLEo7ECUdCLiSKe+9NS8lCm1XGJ9+I31jG39lHPLANaeF
        JSkhCUk6EGxWGHtiG1JBEterLy4lCoFmHHVdGgQDAQMDABsVBtGmLpJ0IEU3DzMoC8GZKldgfZR2IfC+
        NRcaImNOFmRPFqyIJmlUF8qhLZFzIOu6NE4+EWdSFx8YBl5KFPG/NVA/EceeLDc9UMCYKua3Mx0XBhkU
        BY1wH2dylM2jLbKNJ5V2IYNoHXJaGcObK3deGoJnHRURBKKBJKKAJE8+EbaRKJ59I86kLfPBNgAAAH+N
        tyH/C05FVFNDQVBFMi4wAwEBAAAh+QQAAAAAACwAAAAAKAAlAAAIsAD9CRxIsKDBgwgTKlzIsKHDhw1l
        keFCEcq/ixgzaoToj4xFjSBDXnxo5qPIkxkdLkHJMiVDMi1j/mOoR2bMhdhs3lRoUudJhed8tuQplGVC
        WUWNIlyZ9CdCLk2dHrwSVWTCqlYRYg15detGhFS9YkwIVezIpWbPHjSTdmbCsGIVwjSrkFBPrAvZxl3I
        dGvDvlUd1sTr0Ey7wA8JLYErlKM/QnqqMZbpuLLly5gzDwwIADs=
</value>
  </data>
</root>